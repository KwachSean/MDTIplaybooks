{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "MDTI-PassiveDnsReverse",
            "type":  "string"
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Entities_-_Get_Hosts":  {
                            "runAfter":  {
                                "MDTI-Base":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/host"
                            }
                        },
                        "Entities_-_Get_IPs":  {
                            "runAfter":  {
                                "MDTI-Base":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/ip"
                            }
                        },
                        "For_each_Host":  {
                            "foreach":  "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)_4":  {
                                    "runAfter":  {
                                        "Condition":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003eLast week of Passive DNSReverse for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}\u003cbr\u003e\n@{variables('Domain_comment')}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Condition":  {
                                    "actions":  {
                                        "Create_PassiveDnsReverse__HtmlTable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Table",
                                            "inputs":  {
                                                "format":  "HTML",
                                                "from":  "@variables('result_output_host')"
                                            }
                                        },
                                        "Set_domain_comment":  {
                                            "runAfter":  {
                                                "Create_PassiveDnsReverse__HtmlTable":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Domain_comment",
                                                "value":  "@body('Create_PassiveDnsReverse__HtmlTable')"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "For_each":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Set_domain_comment_empty":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "Domain_comment",
                                                    "value":  "No results found."
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "greater":  [
                                                    "@length(variables('result_output_host'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "For_each":  {
                                    "foreach":  "@body('Parse_results_from_Get_request_for_PassiveDnsReverse_')?['value']",
                                    "actions":  {
                                        "Append_to_array_variable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "result_output_host",
                                                "value":  {
                                                    "Collected date":  "@{items('For_each')?['collectedDateTime']}",
                                                    "First seen date":  "@{items('For_each')?['firstSeenDateTime']}",
                                                    "Last seen date":  "@{items('For_each')?['lastSeenDateTime']}",
                                                    "Parent Host":  "@{items('For_each')?['firstSeenDateTime']}",
                                                    "Type":  "@{items('For_each')?['recordType']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_results_from_Get_request_for_PassiveDnsReverse_":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Parse_results_from_Get_request_for_PassiveDnsReverse_":  {
                                    "runAfter":  {
                                        "PassiveDnsReverse_by_Hostname":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('PassiveDnsReverse_by_Hostname')",
                                        "schema":  {
                                            "properties":  {
                                                "@@odata.context":  {
                                                    "type":  "string"
                                                },
                                                "@@odata.count":  {
                                                    "type":  "integer"
                                                },
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "artifact":  {
                                                                "properties":  {
                                                                    "@@odata.type":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "collectedDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "firstSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "lastSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "parentHost":  {
                                                                "properties":  {
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "recordType":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "id",
                                                            "firstSeenDateTime",
                                                            "lastSeenDateTime",
                                                            "collectedDateTime",
                                                            "recordType",
                                                            "parentHost",
                                                            "artifact"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "PassiveDnsReverse_by_Hostname":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "authentication":  {
                                            "audience":  "@body('MDTI-Base')?['resource']",
                                            "clientId":  "@body('MDTI-Base')?['clientId']",
                                            "secret":  "@body('MDTI-Base')?['clientSecret']",
                                            "tenant":  "@body('MDTI-Base')?['tenantId']",
                                            "type":  "ActiveDirectoryOAuth"
                                        },
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/passiveDnsReverse?$count=true"
                                    }
                                },
                                "Set_variable":  {
                                    "runAfter":  {
                                        "Add_comment_to_incident_(V3)_4":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "SetVariable",
                                    "inputs":  {
                                        "name":  "result_output_host",
                                        "value":  [
                                        ]
                                    }
                                }
                            },
                            "runAfter":  {
                                "intialize_domain_comment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_IP_Address":  {
                            "foreach":  "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)_2":  {
                                    "runAfter":  {
                                        "Condition_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003eLast week of Passive DNSReverse for @{items('For_each_IP_Address')?['Address']}\u003cbr\u003e\n@{variables('IPcomment')}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Condition_2":  {
                                    "actions":  {
                                        "Passive_DnsReverse_HTML_Results_Table":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Table",
                                            "inputs":  {
                                                "format":  "HTML",
                                                "from":  "@variables('result_output_ip')"
                                            }
                                        },
                                        "Set_variable_2":  {
                                            "runAfter":  {
                                                "Passive_DnsReverse_HTML_Results_Table":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "IPcomment",
                                                "value":  "@body('Passive_DnsReverse_HTML_Results_Table')"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "For_each_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Set_variable_3":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "IPcomment",
                                                    "value":  "No Results found"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "greater":  [
                                                    "@length(variables('result_output_ip'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "For_each_2":  {
                                    "foreach":  "@body('Parse_results_from_Get_request_for_PassiveDnsReverse2')?['value']",
                                    "actions":  {
                                        "Append_to_array_variable_2":  {
                                            "runAfter":  {
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "result_output_ip",
                                                "value":  {
                                                    "Collected date":  "@{items('For_each_2')?['collectedDateTime']}",
                                                    "First seen date":  "@{items('For_each_2')?['firstSeenDateTime']}",
                                                    "Last seen date":  "@{items('For_each_2')?['lastSeenDateTime']}",
                                                    "Parent Host":  "@{items('For_each_2')?['parentHost']}",
                                                    "Type":  "@{items('For_each_2')?['recordType']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_results_from_Get_request_for_PassiveDnsReverse2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Parse_results_from_Get_request_for_PassiveDnsReverse2":  {
                                    "runAfter":  {
                                        "PassiveDnsReverse__by_IP_Address":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('PassiveDnsReverse__by_IP_Address')",
                                        "schema":  {
                                            "properties":  {
                                                "@@odata.context":  {
                                                    "type":  "string"
                                                },
                                                "@@odata.count":  {
                                                    "type":  "integer"
                                                },
                                                "@@odata.nextLink":  {
                                                    "type":  "string"
                                                },
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "artifact":  {
                                                                "properties":  {
                                                                    "@@odata.type":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "collectedDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "firstSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "lastSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "parentHost":  {
                                                                "properties":  {
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "recordType":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "id",
                                                            "firstSeenDateTime",
                                                            "lastSeenDateTime",
                                                            "collectedDateTime",
                                                            "recordType",
                                                            "parentHost",
                                                            "artifact"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "PassiveDnsReverse__by_IP_Address":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "authentication":  {
                                            "audience":  "@body('MDTI-Base')?['resource']",
                                            "clientId":  "@body('MDTI-Base')?['clientId']",
                                            "secret":  "@body('MDTI-Base')?['clientSecret']",
                                            "tenant":  "@body('MDTI-Base')?['tenantId']",
                                            "type":  "ActiveDirectoryOAuth"
                                        },
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/passiveDnsReverse?$count=true"
                                    }
                                },
                                "Reset_IP_variable":  {
                                    "runAfter":  {
                                        "Add_comment_to_incident_(V3)_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "SetVariable",
                                    "inputs":  {
                                        "name":  "result_output_ip",
                                        "value":  [
                                        ]
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initializa_IP_Comment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Init_Result_Host":  {
                            "runAfter":  {
                                "Entities_-_Get_Hosts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "result_output_host",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Init_Result_IP":  {
                            "runAfter":  {
                                "Entities_-_Get_IPs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "result_output_ip",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initializa_IP_Comment":  {
                            "runAfter":  {
                                "Init_Result_IP":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IPcomment",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "MDTI-Base":  {
                            "runAfter":  {
                            },
                            "type":  "Workflow",
                            "inputs":  {
                                "host":  {
                                    "triggerName":  "manual",
                                    "workflow":  {
                                        "id":  "/subscriptions/1c61ccbf-70b3-45a3-a1fb-848ce46d70a6/resourceGroups/D4ioTlabSean/providers/Microsoft.Logic/workflows/MDTI-Base"
                                    }
                                }
                            }
                        },
                        "intialize_domain_comment":  {
                            "runAfter":  {
                                "Init_Result_Host":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Domain_comment",
                                        "type":  "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuresentinel_1":  {
                                "connectionId":  "/subscriptions/1c61ccbf-70b3-45a3-a1fb-848ce46d70a6/resourceGroups/D4ioTlabSean/providers/Microsoft.Web/connections/azuresentinel-1",
                                "connectionName":  "azuresentinel-1",
                                "id":  "/subscriptions/1c61ccbf-70b3-45a3-a1fb-848ce46d70a6/providers/Microsoft.Web/locations/westeurope/managedApis/azuresentinel"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "LogicAppsCategory":  "security",
                "Source":  "MDTI",
                "createddate":  "10/13/2022",
                "hidden-SentinelWorkspaceId":  "/subscriptions/1c61ccbf-70b3-45a3-a1fb-848ce46d70a6/resourceGroups/D4ioTlabSean/providers/microsoft.OperationalInsights/Workspaces/MDTIsean",
                "owner":  "sewasong",
                "hidden-SentinelTemplateName":  "MDTI-PassiveDnsReverse",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
